https://medium.com/@j.zijlmans/orb-slam-2052515bd84c
DSO mapping:
http://blog.csdn.net/TaTianZhuanShi/article/details/54412392
/home/research2/catkin_ws/src/dso/build/bin/dso_dataset files=/home/research2/catkin_ws/src/dso/build/bin/sequence_11/images.zip calib=/home/research2/catkin_ws/src/dso/build/bin/sequence_11/camera.txt gamma=/home/research2/catkin_ws/src/dso/build/bin/sequence_11/pcalib.txt vignette=/home/research2/catkin_ws/src/dso/build/bin/sequence_11/vignette.png preset=0 mode=0

export DSO_PATH=~/catkin_ws/src/dso

export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:/home/research2/ORB_SLAM2/Examples/ROS >> ~/.bashrc

export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:/home/research2/catkin_ws/src >> ~/.bashrc

export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:/home/research2/catkin_ws/src/dso/bin >> ~/.bashrc



sudo apt-get install libcv-dev libcvaux-dev libhighgui-dev libopencv-dev
./build.sh the ORB-slam

https://github.com/raulmur/ORB_SLAM2/issues/68

https://www.youtube.com/watch?v=StHfHCPrHOw

!!!!!!!!!!!!!!export ROS_MASTER_URI=http://192.168.1.66:11311
!!!!!!!!!!!!!!!!!echo 'export ROS_MASTER_URI=http://192.168.1.66:11311'
!!!!!!!!!!!!!!!!!!rosrun ORB_SLAM ORB_SLAM Data/ORBvoc.txt Data/settings.yaml
rosrun ORB_SLAM2 Mono /home/research2/ORB_SLAM2/Vocabulary/ORBvoc.txt /home/research2/ORB_SLAM2/Examples/Monocular/TUM1.yaml

export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:/home/research2/ORB_SLAM2/Examples/ROS >> ~/.bashrc

export ROS_MASTER_URI=http://research2-Alienware-14:40110>>~/.bashrc

!!!!!!!!!!export ROS_MASTER_URI=http://192.168.1.66:11311>>~/.bashrc
!!!!!!!!!!!!!!!export ROS_IP=192.168.1.66>>~/.bashrc

printenv | grep ROS
source ~/catkin_ws/devel/setup.bash>>~/.bashrc


./Examples/Monocular/mono_euroc Vocabulary/ORBvoc.txt Examples/Monocular/EuRoC.yaml /home/research2/Desktop/package/dataset_2/sequences/04
./Examples/Monocular/mono_euroc Vocabulary/ORBvoc.txt Examples/Monocular/EuRoC.yaml /home/research2/Desktop/package/maV0/cam0/data Examples/Monocular/EuRoC_TimeStamps/MH02.txt

source ~/ORB_SLAM2/Examples/ROS/ORB_SLAM2/build/devel/setup.bash

sudo apt-get install ros-indigo-geographic-msgs

You can also try rosdep install robot_localization



http://wiki.ros.org/ethzasl_sensor_fusion
https://github.com/ethz-asl/mav_control_rw
http://wiki.ros.org/ethzasl_sensor_fusion
http://wiki.ros.org/catkin/Tutorials/using_a_workspace

http://wiki.ros.org/ethzasl_ptam/Tutorials
http://wiki.ros.org/asctec_mav_framework

http://wiki.ros.org/asctec_hl_interface/Tutorials/hlp%20position%20control
******* http://wiki.ros.org/ethzasl_sensor_fusion/Tutorials/sfly_framework


export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:`pwd`/ethzasl_sensor_fusion
http://wiki.ros.org/ethzasl_sensor_fusion/Tutorials/sfly_framework


http://www.hyperbolicthoughts.co.uk/2015/05/lsd-slam-install.html


https://github.com/tum-vision/lsd_slam/issues/236

echo "source ~/rosbuild_ws/setup.bash" >> ~/.bashrc

echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc

source ~/rosbuild_ws/package_dir/lsd_slam/lsd_slam_viewer/build/devel/setup.bash
source ~/rosbuild_ws/package_dir/lsd_slam/lsd_slam_core
http://www.clearpathrobotics.com/assets/guides/ros/Drive%20a%20Grizzly.html



OCCAM SETUP INSTRUCTION
Installation
1. Clone this repository

git clone https://github.com/CityU-MBE/occam_ros.git

or

git clone git@github.com:CityU-MBE/occam.git

2. Setup udev rule for the occam

Execute the following command

echo 'SUBSYSTEM=="usb", ATTRS{idVendor}=="285e", ATTRS{idProduct}=="3efd", MODE="0666", GROUP="plugdev", SYMLINK+="occam"' | sudo tee /etc/udev/rules.d/occam.rules

3. Build the occam SDK

Go into 'occam_sdk'

mkdir release
cd release
cmake -DUSE_OPENCV=1 -DUSE_OPENGL=1 ..
make

Test

Execute the following program: bin/read_images_opencv You should see the output from both camera sets Make sure both USB cables are plugged in
3. Build the ROS node

Adapt the absolute path to the sdk in occam_node/CMakeLists.txt on line 20:

set(INDIGOSDK_PATH "/<absolute/path/to/the/repo>/occam/occam_sdk")

Link the package to your src folder in the catkin workspace:

ln -sf <path/to/occam_node> <path/to/catkin_ws/src>

Run catkin_make or catkin build in your catkin_ws

Test

There is an example roslaunch file in the occam_node:

roslaunch viewStichedImage.launch

You should see the stiched output stream from one camera rig
